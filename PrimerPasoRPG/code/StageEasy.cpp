#include "StageEasy.h"
#include "ObjectManager.h"
#include "Player.h"
#include "Monster.h"
#include "Core.h"

CStageEasy::CStageEasy()
{
}

CStageEasy::~CStageEasy()
{
}

bool CStageEasy::Init()
{
	return true;
}

void CStageEasy::Run()
{
	// 플레이어를 얻어온다. (플레이어는 하나이므로 복사할 필요x)
	CPlayer* pPlayer = (CPlayer*)GET_SINGLE(CObjectManager)->FindObject("Player");

	// 몬스터를 복사한다.
	CMonster* pMonster = (CMonster*)GET_SINGLE(CObjectManager)->CloneObject(ST_EASY);

	while (true) {
		system("cls");
		OutputStageName("Easy");

		pPlayer->Render();
		cout << endl;

		pMonster->Render();
		cout << endl;

		switch (OutputMenu()) {
		case MENU_ATTACK:
			switch (BattleAttack(pPlayer, pMonster)) {
			case BF_PLAYER_DIE:
				pPlayer->DropExp();
				pPlayer->DropGold();
				pPlayer->FullHPMP();

				break;
			case BF_MONSTER_DIE:
				cout << endl << "[시스템] " << pPlayer->GetName() << " 이(가) " << pMonster->GetName() << "을 처치했습니다." << endl << endl;
				pPlayer->AddExp(pMonster->GetCharacterInfo().iExp);
				cout << "[시스템] " << pMonster->GetCharacterInfo().iExp << " 경험치 획득" << endl;

				pPlayer->AddGold(pMonster->GetDropGold());
				cout << "[시스템] " << pMonster->GetDropGold() << " Gold 획득" << endl << endl;

				// 레벨업 조건을 만족하면 true 반환 후 레벨업
				if (pPlayer->CheckLevelUp()) {

					pPlayer->LevelUp();

					// 직업에 맞춰 능력치 상승
					pPlayer->AddLevelUpStatus(GET_SINGLE(CCore)->GetLevelUpInfo(pPlayer->GetJob()));

					cout << "[시스템] Level Up!" << endl << endl;
				}

				// 몬스터를 삭제하고 다시 복사해서 생성해준다. (몬스터 리젠)
				SAFE_DELETE(pMonster);
				pMonster = (CMonster*)GET_SINGLE(CObjectManager)->CloneObject(ST_EASY);

				break;
			}
			break;
		case MENU_BACK:
			// 생성한 몬스터를 더 이상 사용하지 않으므로 뒤로가기 하기 전에 지워준다. 매번 맵에 들어올 때마다 몬스터를 새로 생성해주고있다.
			SAFE_DELETE(pMonster);
			return;
		}

		system("pause");
	}

}
